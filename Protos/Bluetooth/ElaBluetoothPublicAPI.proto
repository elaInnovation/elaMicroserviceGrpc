syntax = "proto3";

// import
import "Protos/Common/ElaCommon.proto";
import "Protos/Authentication/ElaAuthenticationCommon.proto";
import "Protos/Bluetooth/ElaBluetoothCommon.proto";

//option csharp_namespace = "elaBluetoothPublicApiGrpc";

package ElaBluetooth;

// The BackendConfig service definition.
service ElaBluetoothPublicService {

  // authentication functions
  rpc Connect(ElaAuthentication.ElaAuthenticationRequest) returns (ElaAuthentication.ElaAuthenticationResponse) {}
  rpc Disconnect(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}

  // bluetooth scanning
  rpc StartBluetoothListening(ElaBluetoothScanningRequest) returns (ElaCommon.ElaError) {}
  rpc GetScannedDevices(ElaCommon.ElaInputBaseRequest) returns (ElaBluetoothScanResults) {}
  rpc StopBluetoothListening(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}

  // bluetooth scanning streaming
  rpc StartBluetoothDataFlow(ElaBluetoothScanningRequest) returns (stream ElaBluetoothScanResultItem) {}
  rpc StopBluetoothDataFlow(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}

  // bluetooth connections
  rpc SendElaBluetoothCommand(ElaBluetoothConnectRequest) returns (ElaBluetoothConnectResult) {}

  // monitoring
  rpc GetServiceStatus(ElaCommon.ElaInputBaseRequest) returns (ElaBluetoothMicroserviceStatus) {}
  rpc GetLogInformations(ElaCommon.ElaLogRequest) returns (ElaCommon.ElaLogResponse) {}
  rpc SetUserInformations(ElaCommon.ElaUserInformationsRequest) returns (ElaCommon.ElaError) {}
  rpc SetConfiguration(ElaCommon.ElaConfigurationRequest) returns (ElaCommon.ElaError) {}
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothConnectRequest
 * \brief connection request 
 */
message ElaBluetoothConnectRequest {
	
	ElaCommon.ElaInputBaseRequest request = 1;
	string target_mac_address = 2;
	string ela_command = 3;
	string ela_command_password = 4;
	string ela_command_arguments = 5;
	bool isLongWaitCommand = 6;
	//
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothConnectResult
 * \brief connection result
 */
message ElaBluetoothConnectResult {

	ElaCommon.ElaError error = 1;
	ElaBluetoothConnectRequest input_request = 2;
	string result = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothFilter
 * \brief Ela Bluettoth Scanning Request
 */
message ElaBluetoothScanningRequest {

	ElaCommon.ElaInputBaseRequest request = 1;
	ElaBluetoothFilter filter = 2;
	bool define_scan_time = 3;
	uint32 scan_time_seconds = 4;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMicroserviceStatus
 * \brief the status of the bluetooth microservice
 */
message ElaBluetoothMicroserviceStatus {

	enum ScannerStatus {

		Unknown = 0;
		Pending = 1;
		Scanning = 2;
		Connecting = 3;
		Connected = 4;
		Streaming = 5;
	}
	ElaCommon.ElaError last_error = 1;
	ScannerStatus scanner_status = 2;
	ElaBluetoothFilter current_filter = 3;
	ElaCommon.ElaMicroserviceInfos microservice_infos = 4;
	ElaCommon.ServiceInformations user_informations = 5;
	ElaCommon.ElaMicroserviceStatistics statisticsSummary = 6;
	// RFU
}

///////////////////////////////////////////////////////////