syntax = "proto3";

// import
import "Protos/Common/ElaCommon.proto";
import "Protos/Common/ElaMicroserviceManagement.proto";
import "Protos/Authentication/ElaAuthenticationCommon.proto";
import "Protos/Bluetooth/ElaBluetoothCommon.proto";
import "Protos/Bluetooth/ElaBluetoothOtap.proto";
import "Protos/Bluetooth/ElaBluetoothPublicAPI.proto";

//option csharp_namespace = "elaBluetoothPublicApiGrpc";

package ElaBluetooth;

// The BackendConfig service definition.
service ElaBluetoothMasterPublicService {

  // authentication functions
  rpc Connect(ElaAuthentication.ElaAuthenticationRequest) returns (ElaAuthentication.ElaAuthenticationResponse) {}
  rpc Disconnect(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}

  // microservice base management
  rpc AddMicroservice(ElaCommon.ElaManageMicroserviceRequest) returns (ElaCommon.ElaMicroserviceAddResult) {}
  rpc DeleteMicroservice(ElaCommon.ElaManageMicroserviceRequest) returns (ElaCommon.ElaError) {}
  rpc ListMicroservices(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaMicroserviceListResult) {}
  rpc GetMicroservicesInfos(ElaCommon.ElaMicroserviceGetInfosRequest) returns (ElaCommon.ElaMicroserviceListResult) {}
  rpc ClearMicroservices(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}
  
  // bluetooth scanning
  rpc StartBluetoothListening(ElaBluetoothMasterScanRequest) returns (ElaBluetoothMasterScanResult) {}
  rpc GetScannedDevices(ElaBluetoothMasterScanRequest) returns (ElaBluetoothMasterScanResults) {}
  rpc GetJsonScannedDevices(ElaBluetoothMasterScanRequest) returns (ElaBluetoothMasterScanJsonResults) {}
  rpc StopBluetoothListening(ElaBluetoothMasterScanRequest) returns (ElaBluetoothMasterScanResult) {}

  // bluetooth scanning streaming
  rpc StartBluetoothDataFlow(ElaBluetoothMasterScanRequest) returns (stream ElaBluetoothMasterScanJsonResult) {}
  rpc StopBluetoothDataFlow(ElaBluetoothMasterScanRequest) returns (ElaCommon.ElaError) {}

  // bluetooth otap microservice main functions
  rpc ConfigureTags(ElaBluetoothMasterConfigurationTagRequest) returns (ElaCommon.ElaError) {}
  rpc ConfigureServices(ElaBluetoothMasterConfigurationServiceRequest) returns (ElaCommon.ElaError) {}
  rpc Otaps(ElaBluetoothMasterOtapRequest) returns (ElaCommon.ElaError) {}
  rpc UploadOtapFile(ElaBluetoothOtap.ElaOtapUploadRequest) returns (ElaCommon.ElaError) {}

  // bluetooth connections
  rpc SendElaBluetoothCommand(ElaBluetoothMasterConnectRequest) returns (ElaBluetoothConnectResult) {}

  // monitoring
  rpc GetServiceStatus(ElaCommon.ElaInputBaseRequest) returns (ElaBluetoothMasterMicroserviceStatus) {}
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterScanRequest
 * \brief Ela Bluetooth Master Start Scanning Request
 */
message ElaBluetoothMasterScanRequest {

	enum ScanMode {

		Start = 0;
		Stop = 1;
	}
	ElaBluetooth.ElaBluetoothScanningRequest scan_request = 1;
	ScanMode scan_mode = 2;
	repeated string target_services_id = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterStartResult
 * \brief Ela Bluetooth Master Start Scanning Result
 */
message ElaBluetoothMasterScanResult {

	ElaCommon.ElaError error = 1;
	ElaBluetoothMasterScanRequest scan_request = 2;
	repeated string updated_services_id = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterScanResultItem
 * \brief Ela Bluetooth Master Scan Result Item to describe the results from one service
 */
 message ElaBluetoothMasterScanResultItem {
	
	ElaCommon.ElaMicroserviceItem microservice_id = 1;
	ElaBluetooth.ElaBluetoothScanResults microservice_result = 2;
}

///////////////////////////////////////////////////////////
/**
 * \class ElaBluetoothMasterScanJsonResults
 * \brief ELA bluetooth Master scan result where each result is a Json object according to the commun format
 */
message ElaBluetoothMasterScanJsonResults {

	ElaCommon.ElaError error = 1;
	string clientId = 2;
	repeated string results = 3;
	uint32 total_microservice_source = 4;
	uint32 total_data_get = 5;
}

///////////////////////////////////////////////////////////
/**
 * \class ElaBluetoothMasterScanJsonResult
 * \brief ELA bluetooth Master scan result just expone one result in json format
 */
message ElaBluetoothMasterScanJsonResult {

	string clientId = 1;
	string jsonresult = 2;
	bool closeStreamingRequest = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterScanResults 
 * \brief Ela Bluetooth Master Scan Results
 */
 message ElaBluetoothMasterScanResults {
	
	ElaCommon.ElaError error = 1;
	string clientId = 2;
	repeated ElaBluetoothMasterScanResultItem results = 3;
	uint32 total_microservice_source = 4;
	uint32 total_data_get = 5;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterConnectRequest
 * \brief connection request for the bluetooth master microservice
 */
message ElaBluetoothMasterConnectRequest {
	
	enum ConnectionMode {

		First_Found = 0;
		Already_Seen = 1;
		Target_Microservice = 2;
	}
	ElaBluetooth.ElaBluetoothConnectRequest connection_request = 1;
	ConnectionMode connection_mode = 2;
	string target_services_id = 3;
	//
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterConnectResult
 * \brief connection result for the bluetooth master microservice
 */
message ElaBluetoothMasterConnectResult {

	ElaBluetooth.ElaBluetoothConnectResult connection_result = 1;
	string target_services_id = 2;
	ElaBluetoothMasterConnectRequest.ConnectionMode connection_mode = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothBaseMicroserviceStatus
 * \brief the status of the bluetooth base microservice
 */
message ElaBluetoothBaseMicroserviceStatus {

	ElaCommon.ElaMicroserviceItem microservice_id = 1;
	ElaBluetoothMicroserviceStatus microservice_status = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterStatusSnapshot 
 * \brief provide a snapshot for all microservice bases
 */
message ElaBluetoothMasterStatusSnapshot {

	uint32 countServices = 1;
	uint32 countUnkonwn = 2;
	uint32 countPending = 3;
	uint32 countConnecting = 4;
	uint32 countConnected = 5;
	uint32 countScanning = 6;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterMicroserviceStatus
 * \brief the status of the bluetooth microservice
 */
message ElaBluetoothMasterMicroserviceStatus {

	// TODO_MAT
	enum BleMasterStatus {

		Unknown = 0;
		Pending = 1;
		Processing_Request = 2;
		Provide_Feedback = 3;
	}
	ElaCommon.ElaError last_error = 1;
	BleMasterStatus ble_master_status = 2;
	repeated ElaBluetoothBaseMicroserviceStatus ble_bases_status = 3;
	repeated ElaBluetoothOtap.ElaBluetoothOtapMicroserviceStatus ble_otap_status = 4;
	ElaBluetoothMasterStatusSnapshot ble_bases_snapshot = 5;
	ElaCommon.ElaMicroserviceInfos microservice_infos = 6;
	ElaCommon.ServiceInformations user_informations = 7;
	ElaCommon.ElaMicroserviceStatistics statisticsSummary = 8;
	// RFU
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterConfigurationTagRequest
 * \brief bluetooth master configuration tag request to configure one or several tags
 */
message ElaBluetoothMasterConfigurationTagRequest {

	string to_do = 1;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterConfigurationServiceRequest
 * \brief bluetooth master service configuration tag configure the underlayer ms
 */
message ElaBluetoothMasterConfigurationServiceRequest {

	string to_do = 1;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaBluetoothMasterOtapRequest
 * \brief bluetooth master configuration tag request to configure one or several tags
 */
message ElaBluetoothMasterOtapRequest {

	repeated ElaBluetoothOtap.ElaOtapRequest target_tags = 1;
}

///////////////////////////////////////////////////////////