syntax = "proto3";

package ElaTagset;

// import
import "Protos/Common/ElaCommon.proto";

///////////////////////////////////////////////////////////
/*
 * \class ConfigurationVariables
 * \brief tag configuration variables
 */
message ConfigurationVariables {

	string variablename = 1;
	repeated string values = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class VariableValid
 * \brief tag configuration variables
 */
message VariableValid {

	string variablename = 1;
	bool valid = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ConfigurationValid
 * \brief tag configuration variables
 */
message ConfigurationValid {

	bool valid = 1;
	repeated string parameters = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class StickerConfiguration
 * \brief sticker configuration variables
 */
message StickerConfiguration {

	repeated string customFields = 1;
	repeated string imagesFields = 2;
	string logo = 3;
	string datamatrix = 4;
	string labname = 5;
}

///////////////////////////////////////////////////////////
/*
 * \class CommandType
 * \brief command function to use for automation
 */
 enum CommandType {

	NONE = 0;
	STATUS = 1;
	CONFIG = 2;
	REJECT = 3;
	CUSTOM = 4;
 }

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetFirmwareVersionRequest
 * \brief Ela Tagset Version Firmware definition
 */
message ElaTagsetFirmwareVersionRequest {

	ElaCommon.ElaInputBaseRequest request = 1;
	string techno = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetFirmwareFormatRequest
 * \brief Ela Tagset Format Firmware definition
 */
message ElaTagsetFirmwareFormatRequest {

	ElaTagsetFirmwareVersionRequest request = 1;
	string version = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetHardwareFormatRequest
 * \brief Ela Tagset Format Hardware definition
 */
message ElaTagsetHardwareFormatRequest {

	ElaTagsetFirmwareFormatRequest request = 1;
	string formatfw = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetTagFormatRequest
 * \brief Ela Tagset Tag Format definition
 */
message ElaTagsetTagFormatRequest {

	ElaTagsetHardwareFormatRequest request = 1;
	string formathw = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetTagFormatQuantityRequest
 * \brief Ela Tagset Tag Format definition
 */
message ElaTagsetTagFormatQuantityRequest {

	ElaTagsetTagFormatRequest request = 1;
	uint32 quantity = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetConstantRequest
 * \brief Ela Tagset Format Firmware definition
 */
message ElaTagsetConstantRequest {

	ElaCommon.ElaFilePathRequest request = 1;
	string constant = 2;
	string path = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetVariablesRequest
 * \brief Ela Tagset Format Firmware definition
 */
message ElaTagsetVariablesRequest {

	ElaCommon.ElaFilePathRequest request = 1;
	repeated ConfigurationVariables variables = 2;
	uint32 quantity = 3;
	string path = 4;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetTagConfiurationRequest
 * \brief Ela Tagset Format Firmware definition
 */
message ElaTagsetTagConfiurationRequest {

	ElaTagsetVariablesRequest request = 1;
	string configuration = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetQuantityRequest
 * \brief Ela Tagset Format Firmware definition
 */
message ElaTagsetQuantityRequest {

	ElaCommon.ElaInputBaseRequest request = 1;
	uint32 quantity = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetProductionFileRequest
 * \brief Ela Tagset Format Firmware definition
 */
message ElaTagsetProductionFileRequest {

	ElaTagsetTagFormatRequest request = 1;
	string customer = 2;
	uint32 ordernum = 3;
	uint32 ofnum = 4;
	string line = 5;
	string idf = 6;
	string designation = 7;
	uint32 globalquantity = 8;
	uint32 batchquantity = 9;
	string configuration = 10;
	repeated ConfigurationVariables variables = 11;
	repeated string outputfields = 12;
	StickerConfiguration sticker = 13;
	CommandType command = 14;
	string path = 15;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceStatus
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceStatus {

	enum TagsetStatus {

			Unknown = 0;
			Pending = 1;
			Database_Communicating = 2;
			Creating_Tagset_File = 3;
			Managing_Intermediate_Files = 4;
		}
	ElaCommon.ElaError last_error = 1;
	TagsetStatus status = 2;
	ElaCommon.ElaMicroserviceInfos microservice_infos = 3;
	ElaCommon.ServiceInformations user_informations = 4;
	ElaCommon.ElaMicroserviceStatistics statisticsSummary = 5;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceCustomers
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceCustomers {

	ElaCommon.ElaError last_error = 1;
	repeated string customers = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceTechnos
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceTechnos {

	ElaCommon.ElaError last_error = 1;
	repeated string technos = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceFirmwareVersions
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceFirmwareVersions {

	ElaCommon.ElaError last_error = 1;
	repeated string versions = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceFirmwareFormats
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceFirmwareFormats {

	ElaCommon.ElaError last_error = 1;
	repeated string formatsfw = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceHardwareFormats
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceHardwareFormats {

	ElaCommon.ElaError last_error = 1;
	repeated string formatshw = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceTagConfiguration
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceTagConfiguration {

	ElaCommon.ElaError last_error = 1;
	string config = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceOutputFields
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceOutputFields {

	ElaCommon.ElaError last_error = 1;
	repeated string fields = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceVariables
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceVariables {

	ElaCommon.ElaError last_error = 1;
	repeated ConfigurationVariables variables = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceConstantImport
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceConstantImport {

	ElaCommon.ElaError last_error = 1;
	string constant = 2;
	bool valid = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceVariableImport
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceVariableImport {

	ElaCommon.ElaError last_error = 1;
	repeated ConfigurationVariables variables = 2;
	repeated VariableValid validity = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceConfigurationValid
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceConfigurationValid {

	ElaCommon.ElaError last_error = 1;
	ConfigurationValid validity = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceVariableValues
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceVariableValues {

	ElaCommon.ElaError last_error = 1;
	repeated string values = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetAuthenticationRequest
 * \brief Ela Tagset Format definition
 */
message ElaTagsetAuthenticationRequest {

    string username = 1;
    string password = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMicroserviceAuthenticationResponse
 * \brief message to get a list of customers
 */
message ElaTagsetMicroserviceAuthenticationResponse {

	ElaCommon.ElaError last_error = 1;
	bool authorized = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetFileChunk
 * \brief message to get a file content
 */
message ElaTagsetFileChunk {

	ElaCommon.ElaError last_error = 1;
	bytes data = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetMultipleFileChunk
 * \brief message to get a file content
 */
message ElaTagsetMultipleFileChunk {

	ElaCommon.ElaError last_error = 1;
	bytes data_production = 2;
	bytes data_sticker = 3;
	bytes data_cardboard = 4;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetIncrementalVariable
 * \brief message to get incremental variables configurations
 */
message ElaTagsetIncrementalVariable {

	repeated IncrementalVariables variables = 1;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetIncrementalVariableRequest
 * \brief message to get incremental variables configurations
 */
message ElaTagsetIncrementalVariableRequest {

	ElaTagsetQuantityRequest request = 1;
	repeated IncrementalVariables variables = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class IncrementalVariables
 * \brief incremental variable configuration
 */
message IncrementalVariables {

	string variable = 1;
	string fix_part = 2;
	uint32 length = 3;
	uint32 start_id = 4;
	uint32 number = 5;
	bool is_prefix = 6;
	bool is_hexadecimal = 7;
}

///////////////////////////////////////////////////////////
/*
 * \class StickerRecord
 * \brief sticker configuration record
 */
message StickerRecord{

	string name = 1;
	StickerConfiguration sticker = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetStickerConfigurationRequest
 * \brief message to save sticker configuration
 */
message ElaTagsetStickerConfigurationRequest{

	ElaCommon.ElaInputBaseRequest request = 1;
	StickerRecord sticker = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaTagsetStickerConfigurationResponse
 * \brief message to get all sticker configurations
 */
message ElaTagsetStickerConfigurationResponse{

	ElaCommon.ElaError error = 1;
	repeated StickerRecord sticker = 2;
}