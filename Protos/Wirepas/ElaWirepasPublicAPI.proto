syntax = "proto3";

package ElaWirepas;

// import
import "Protos/Common/ElaCommon.proto";
import "Protos/Wirepas/ElaWirepasCommon.proto";
import "Protos/Wirepas/WirepasMessages.proto";

// The service definition.
service ElaWirepasPublicService {

  // Wirepas flow management

  /**
    Request a new Ela-wirepas-data-packet
	sends data request receives data stream
    */
  rpc StartWirepasDataFlow(ElaWirepasDataRequest) returns (stream ElaWirepasDataPacket) {}
//  rpc GetAvailableNodes(ElaCommon.ElaInputBaseRequest) returns (ElaWirepasNodeList) {}
  rpc StopWirepasDataFlow(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}

  // Wirepas Commands
  rpc SendElaWirepasCommand(SendPacketReq) returns (SendPacketResp) {}

  // Wirepas Monitoring
  rpc GetServiceStatus(ElaCommon.ElaInputBaseRequest) returns (ElaWirepasMicroserviceStatus) {}
}

///////////////////////////////////////////////////////////
/*
 * \class ElaWirepasDataRequest
 * \brief Ela Wirepas Data Request
 */
message ElaWirepasDataRequest {

	ElaCommon.ElaInputBaseRequest request = 1;
	string DataType = 2; // defines what type of data is requested e.g. Location or Sensor data
	string BrokerAdress = 3;
	int32 BrokerPort = 4;
}


///////////////////////////////////////////////////////////
/*
 * \class ElaWirepasDataPacket
 * \brief interoperable ELA datapacket discription 
 */
message ElaWirepasDataPacket {

	string DataType = 1; // 

	ElaWirepasSensorDataItem wirepasSensorData = 2;
	ElaWirepasLocDataItem wirepasLocData = 3;

	double VBat = 4;
	string TimeStamp = 5;
	ElaWirepasNodeItem wpNode_item = 6;
}




///////////////////////////////////////////////////////////
/*
 * \class ElaWirepasNodeList 
 * \brief List of available wirepas nodes 
 */
//message ElaWirepasNodeList {

//	string clientId = 1;
	//repeated ElaWirepasNodeItem results = 2;
//}

///////////////////////////////////////////////////////////
/*
 * \class ElaWirepasMicroserviceStatus
 * \brief the status of the Wirepas microservice
 */
message ElaWirepasMicroserviceStatus {

	//enum WirepasFLowStatus {
	// todo
	//}
	ElaCommon.ElaError last_error = 1;
	ElaCommon.ElaMicroserviceInfos microservice_infos = 4;
	ElaCommon.ServiceInformations user_informations = 5;
	ElaCommon.ElaMicroserviceStatistics statisticsSummary = 6;
	// RFU
}

