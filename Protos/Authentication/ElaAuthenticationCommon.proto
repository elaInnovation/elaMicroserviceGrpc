syntax = "proto3";

package ElaAuthentication;

// import
import "Protos/Common/ElaCommon.proto";

// The BackendConfig service definition.
service ElaAuthenticationPublicService {

	// RPC definition

	// main login function
	rpc Login(ElaAuthenticationRequest) returns (ElaAuthenticationResponse) {}
	rpc Logout(ElaCommon.ElaInputBaseRequest) returns (ElaCommon.ElaError) {}

	// check authentication function
	rpc CheckAuthorization(ElaManagerUserRequest) returns (ElaManagerUserResponse) {}

	// main users function
	rpc CreateUser(ElaManagerUserRequest) returns (ElaCommon.ElaError) {}
	rpc GetUsers(ElaManagerUserRequest) returns (ElaAuthenticationUserList) {}
	rpc UpdateUser(ElaManagerUserRequest) returns (ElaCommon.ElaError) {}
	rpc DeleteUser(ElaManagerUserRequest) returns (ElaCommon.ElaError) {}
}

///////////////////////////////////////////////////////////
/*
 * \class ElaAuthenticationRequest
 * \brief information relative the authentication functions
 */
message ElaAuthenticationRequest {

	ElaCommon.ElaInputBaseRequest request = 1;
	string login = 2;
	string certificate = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaAuthenticationResponse
 * \brief information for a result to an authentication request
 */
message ElaAuthenticationResponse {

	ElaCommon.ElaError error = 1;
	string sessionId = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaManagerUserRequest
 * \brief ELA Manage User Request
 */
message ElaManagerUserRequest {

	ElaCommon.ElaInputBaseRequest request = 1;
	ElaAuthenticationUser user = 2;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaManagerUserRequest
 * \brief ELA Manage User Request
 */
message ElaManagerUserResponse {

	ElaCommon.ElaError error = 1;
	ElaAuthenticationUser user = 2;
	bool allowedUser = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaAuthenticationUserList
 * \brief ELA Manage User Request
 */
message ElaAuthenticationUserList {

	ElaCommon.ElaError error = 1;
	ElaAuthenticationRequest inputRequest = 2;
	repeated ElaAuthenticationUser users = 3;
}

///////////////////////////////////////////////////////////
/*
 * \class ElaAuthenticationUser
 * \brief ELA Authentication User
 */
message ElaAuthenticationUser {

	string username = 1;
	string password = 2;
	string expirationdate = 3;
	string role = 4;
}

///////////////////////////////////////////////////////////
